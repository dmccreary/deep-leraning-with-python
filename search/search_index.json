{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Deep Learning with Python For full documentation visit mkdocs.org . Project layout 1 2 3 4 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#deep-learning-with-python","text":"For full documentation visit mkdocs.org .","title":"Deep Learning with Python"},{"location":"#project-layout","text":"1 2 3 4 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"glossary/","text":"Glossary of Terms","title":"Glossary"},{"location":"glossary/#glossary-of-terms","text":"","title":"Glossary of Terms"},{"location":"references/","text":"References Manning Book https://www.manning.com/books/deep-learning-with-python Source code from Fran\u00e7ois Chollet's Web Site","title":"References"},{"location":"references/#references","text":"","title":"References"},{"location":"references/#manning-book","text":"https://www.manning.com/books/deep-learning-with-python Source code from Fran\u00e7ois Chollet's Web Site","title":"Manning Book"},{"location":"table-of-contents/","text":"Table of Contents Introduction We cover the background of what a Deep Neural Network and what they are used for. Introduction Getting Started We cover how to get started with running Python and Getting Started","title":"Table of Contents"},{"location":"table-of-contents/#table-of-contents","text":"","title":"Table of Contents"},{"location":"table-of-contents/#introduction","text":"We cover the background of what a Deep Neural Network and what they are used for. Introduction","title":"Introduction"},{"location":"table-of-contents/#getting-started","text":"We cover how to get started with running Python and Getting Started","title":"Getting Started"},{"location":"chapters/ch01/","text":"Chapter 1","title":"Chapter 1 - Introduction"},{"location":"chapters/ch01/#chapter-1","text":"","title":"Chapter 1"},{"location":"chapters/ch02/","text":"Chapter 2: Getting Started We demonstrate a setup using Conda, pip and VSCode. Setup for Doing Labs 1 2 conda create -n deep-learning python = 3 conda activate The first step may take 1-2 minutes. Downloading Tensorflow 1 pip install tensorflow This might take about 2-3 minutes. Check Versions We can use the pip freeze command to verify. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 pip freeze absl-py == 1 .0.0 astunparse == 1 .6.3 cachetools == 5 .0.0 certifi == 2020 .6.20 charset-normalizer == 2 .0.12 flatbuffers == 2 .0 gast == 0 .5.3 google-auth == 2 .6.3 google-auth-oauthlib == 0 .4.6 google-pasta == 0 .2.0 grpcio == 1 .44.0 h5py == 3 .6.0 idna == 3 .3 keras == 2 .8.0 Keras-Preprocessing == 1 .1.2 libclang == 13 .0.0 Markdown == 3 .3.6 numpy == 1 .22.3 oauthlib == 3 .2.0 opt-einsum == 3 .3.0 protobuf == 3 .20.0 pyasn1 == 0 .4.8 pyasn1-modules == 0 .2.8 requests == 2 .27.1 requests-oauthlib == 1 .3.1 rsa == 4 .8 six == 1 .16.0 tensorboard == 2 .8.0 tensorboard-data-server == 0 .6.1 tensorboard-plugin-wit == 1 .8.1 tensorflow == 2 .8.0 tensorflow-io-gcs-filesystem == 0 .24.0 termcolor == 1 .1.0 tf-estimator-nightly == 2 .8.0.dev2021122109 typing_extensions == 4 .1.1 urllib3 == 1 .26.9 Werkzeug == 2 .1.1 wrapt == 1 .14.0 Testing Your TensorFlow Version 1 2 import tensorflow as tf print ( tf . __version__ ) return 1 2.8.0 Configuring Visual Studio Code Note the blue area at the bottom of the screen allows you to select the virtual environment. In this case the label is: Python 3.10.4 64-bit ('deep-learning':conda) Configuring Jypyter Notebook Kernel Not only do we want to get the Python runtime, but we want to configure the Jupyter Notebook Kernel On the upper right click on the kernel and then select the appropriate deep-learning conda environment:","title":"Chapter 2 - What is a DNN"},{"location":"chapters/ch02/#chapter-2-getting-started","text":"We demonstrate a setup using Conda, pip and VSCode.","title":"Chapter 2: Getting Started"},{"location":"chapters/ch02/#setup-for-doing-labs","text":"1 2 conda create -n deep-learning python = 3 conda activate The first step may take 1-2 minutes.","title":"Setup for Doing Labs"},{"location":"chapters/ch02/#downloading-tensorflow","text":"1 pip install tensorflow This might take about 2-3 minutes.","title":"Downloading Tensorflow"},{"location":"chapters/ch02/#check-versions","text":"We can use the pip freeze command to verify. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 pip freeze absl-py == 1 .0.0 astunparse == 1 .6.3 cachetools == 5 .0.0 certifi == 2020 .6.20 charset-normalizer == 2 .0.12 flatbuffers == 2 .0 gast == 0 .5.3 google-auth == 2 .6.3 google-auth-oauthlib == 0 .4.6 google-pasta == 0 .2.0 grpcio == 1 .44.0 h5py == 3 .6.0 idna == 3 .3 keras == 2 .8.0 Keras-Preprocessing == 1 .1.2 libclang == 13 .0.0 Markdown == 3 .3.6 numpy == 1 .22.3 oauthlib == 3 .2.0 opt-einsum == 3 .3.0 protobuf == 3 .20.0 pyasn1 == 0 .4.8 pyasn1-modules == 0 .2.8 requests == 2 .27.1 requests-oauthlib == 1 .3.1 rsa == 4 .8 six == 1 .16.0 tensorboard == 2 .8.0 tensorboard-data-server == 0 .6.1 tensorboard-plugin-wit == 1 .8.1 tensorflow == 2 .8.0 tensorflow-io-gcs-filesystem == 0 .24.0 termcolor == 1 .1.0 tf-estimator-nightly == 2 .8.0.dev2021122109 typing_extensions == 4 .1.1 urllib3 == 1 .26.9 Werkzeug == 2 .1.1 wrapt == 1 .14.0","title":"Check Versions"},{"location":"chapters/ch02/#testing-your-tensorflow-version","text":"1 2 import tensorflow as tf print ( tf . __version__ ) return 1 2.8.0","title":"Testing Your TensorFlow Version"},{"location":"chapters/ch02/#configuring-visual-studio-code","text":"Note the blue area at the bottom of the screen allows you to select the virtual environment. In this case the label is: Python 3.10.4 64-bit ('deep-learning':conda)","title":"Configuring Visual Studio Code"},{"location":"chapters/ch02/#configuring-jypyter-notebook-kernel","text":"Not only do we want to get the Python runtime, but we want to configure the Jupyter Notebook Kernel On the upper right click on the kernel and then select the appropriate deep-learning conda environment:","title":"Configuring Jypyter Notebook Kernel"},{"location":"chapters/ch03/","text":"Chapter 3: Running the MINST Demo Import the MNIST dataset. Put 60K into training and 10K into test. 1 2 from tensorflow.keras.datasets import mnist ( train_images , train_labels ), ( test_images , test_labels ) = mnist . load_data () Getting the Shape of Data The shape function will tell is the dimensions of the input dataset: 1 train_images . shape 1 (60000, 28, 28) There are 60,000 training images that are 28 by 28 pixels. 1 test_images . shape 1 (10000, 28, 28) TensorFlow Optimization Errors 1 2 2022 - 04 - 08 14 : 38 : 30.403775 : I tensorflow / core / platform / cpu_feature_guard . cc : 151 ] This TensorFlow binary is optimized with on eAPI Deep Neural Network Library ( on eDNN ) to use the following CPU instructions in performance - critical operations : AVX2 FMA To enable them in other operations , rebuild TensorFlow with the appropriate compiler flags .","title":"Chapter 3 - Getting Started"},{"location":"chapters/ch03/#chapter-3-running-the-minst-demo","text":"Import the MNIST dataset. Put 60K into training and 10K into test. 1 2 from tensorflow.keras.datasets import mnist ( train_images , train_labels ), ( test_images , test_labels ) = mnist . load_data ()","title":"Chapter 3: Running the MINST Demo"},{"location":"chapters/ch03/#getting-the-shape-of-data","text":"The shape function will tell is the dimensions of the input dataset: 1 train_images . shape 1 (60000, 28, 28) There are 60,000 training images that are 28 by 28 pixels. 1 test_images . shape 1 (10000, 28, 28)","title":"Getting the Shape of Data"},{"location":"chapters/ch03/#tensorflow-optimization-errors","text":"1 2 2022 - 04 - 08 14 : 38 : 30.403775 : I tensorflow / core / platform / cpu_feature_guard . cc : 151 ] This TensorFlow binary is optimized with on eAPI Deep Neural Network Library ( on eDNN ) to use the following CPU instructions in performance - critical operations : AVX2 FMA To enable them in other operations , rebuild TensorFlow with the appropriate compiler flags .","title":"TensorFlow Optimization Errors"}]}